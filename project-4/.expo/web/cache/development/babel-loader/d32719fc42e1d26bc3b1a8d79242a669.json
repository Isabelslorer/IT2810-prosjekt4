{"ast":null,"code":"var _jsxFileName = \"/Users/isabelslorer/Documents/Webutvikling/project-4/project-4/components/Restaurants.tsx\";\nimport React from 'react';\nimport { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchRestaurants } from \"../store/ducks/restaurantDuck\";\nimport { Restaurantobject } from \"./Restaurantobject\";\n\nfunction Restaurants(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  var regionFilter = useSelector(function (state) {\n    return state.regionFilter;\n  });\n  var cuisineFilter = useSelector(function (state) {\n    return state.cuisineFilter;\n  });\n  var priceFilter = useSelector(function (state) {\n    return state.priceFilter;\n  });\n  var search = useSelector(function (state) {\n    return state.search;\n  });\n  var sortBy = useSelector(function (state) {\n    return state.sorting;\n  });\n  var skip = useSelector(function (state) {\n    return state.skip;\n  });\n  var restaurants = useSelector(function (state) {\n    return state.restaurant;\n  });\n  useEffect(function () {\n    dispatch(fetchRestaurants(skip, regionFilter, cuisineFilter, priceFilter, search, sortBy.sortBy, sortBy.ascending));\n  }, [fetchRestaurants, regionFilter, cuisineFilter, priceFilter, search, sortBy, skip]);\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }\n  }, restaurants.map(function (restaurant, index) {\n    return React.createElement(Restaurantobject, {\n      restaurant: restaurant,\n      key: index,\n      navigation: navigation,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    });\n  }));\n}\n\nexport default Restaurants;","map":{"version":3,"sources":["/Users/isabelslorer/Documents/Webutvikling/project-4/project-4/components/Restaurants.tsx"],"names":["React","useEffect","useDispatch","useSelector","fetchRestaurants","Restaurantobject","Restaurants","navigation","dispatch","regionFilter","state","cuisineFilter","priceFilter","search","sortBy","sorting","skip","restaurants","restaurant","ascending","map","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,OAA1B;;AAGA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAGA,SAASC,gBAAT;AACA,SAASC,gBAAT;;AAGA,SAASC,WAAT,OAAmC;AAAA;;AAAA,MAAbC,UAAa,QAAbA,UAAa;AAE/B,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAGA,MAAMO,YAAY,GAAGN,WAAW,CAAC,UAACO,KAAD;AAAA,WAAuBA,KAAK,CAACD,YAA7B;AAAA,GAAD,CAAhC;AACA,MAAME,aAAa,GAAGR,WAAW,CAAC,UAACO,KAAD;AAAA,WAAuBA,KAAK,CAACC,aAA7B;AAAA,GAAD,CAAjC;AACA,MAAMC,WAAW,GAAGT,WAAW,CAAC,UAACO,KAAD;AAAA,WAAuBA,KAAK,CAACE,WAA7B;AAAA,GAAD,CAA/B;AACA,MAAMC,MAAM,GAAGV,WAAW,CAAC,UAACO,KAAD;AAAA,WAAuBA,KAAK,CAACG,MAA7B;AAAA,GAAD,CAA1B;AACA,MAAMC,MAAM,GAAGX,WAAW,CAAC,UAACO,KAAD;AAAA,WAAuBA,KAAK,CAACK,OAA7B;AAAA,GAAD,CAA1B;AACA,MAAMC,IAAI,GAAGb,WAAW,CAAC,UAACO,KAAD;AAAA,WAAsBA,KAAK,CAACM,IAA5B;AAAA,GAAD,CAAxB;AACA,MAAMC,WAAW,GAAGd,WAAW,CAAC,UAACO,KAAD;AAAA,WAAsBA,KAAK,CAACQ,UAA5B;AAAA,GAAD,CAA/B;AAEAjB,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,QAAQ,CACJJ,gBAAgB,CAACY,IAAD,EAAOP,YAAP,EAAqBE,aAArB,EAAoCC,WAApC,EAAiDC,MAAjD,EAAyDC,MAAM,CAACA,MAAhE,EAAwEA,MAAM,CAACK,SAA/E,CADZ,CAAR;AAGD,GAJQ,EAIN,CAACf,gBAAD,EAAmBK,YAAnB,EAAiCE,aAAjC,EAAgDC,WAAhD,EAA6DC,MAA7D,EAAqEC,MAArE,EAA6EE,IAA7E,CAJM,CAAT;AAQA,SACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMC,WAAW,CAACG,GAAZ,CAAgB,UAACF,UAAD,EAA0BG,KAA1B;AAAA,WACjB,oBAAC,gBAAD;AACI,MAAA,UAAU,EAAEH,UADhB;AAEI,MAAA,GAAG,EAAEG,KAFT;AAGI,MAAA,UAAU,EAAEd,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiB;AAAA,GAAhB,CADN,CADH;AAWH;;AAED,eAAeD,WAAf","sourcesContent":["import React from 'react'\nimport { StatusBar } from 'expo-status-bar';\nimport { useEffect } from 'react';\nimport { View, Text, Image, ScrollView } from 'react-native';\nimport { Card, ListItem, Button, Icon } from 'react-native-elements';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IRestaurant } from '../../backend/models/Restaurant';\nimport { stateType } from '../App';\nimport { fetchRestaurants } from '../store/ducks/restaurantDuck';\nimport { Restaurantobject } from './Restaurantobject';\n\n\nfunction Restaurants({navigation}) {\n\n    const dispatch = useDispatch();\n  \n    // Gets all the states from redux that is needed to fetch the correct restaurants\n    const regionFilter = useSelector((state: stateType)  => state.regionFilter)\n    const cuisineFilter = useSelector((state: stateType)  => state.cuisineFilter)\n    const priceFilter = useSelector((state: stateType)  => state.priceFilter)\n    const search = useSelector((state: stateType)  => state.search)\n    const sortBy = useSelector((state: stateType)  => state.sorting)\n    const skip = useSelector((state: stateType) => state.skip)\n    const restaurants = useSelector((state: stateType) => state.restaurant)\n  \n    useEffect(() => {\n      dispatch(\n          fetchRestaurants(skip, regionFilter, cuisineFilter, priceFilter, search, sortBy.sortBy, sortBy.ascending)\n      );\n    }, [fetchRestaurants, regionFilter, cuisineFilter, priceFilter, search, sortBy, skip])\n\n    \n\n    return (\n       <View>\n            {restaurants.map((restaurant: IRestaurant, index) => \n            <Restaurantobject\n                restaurant={restaurant}\n                key={index}\n                navigation={navigation}\n            ></Restaurantobject>\n            )}\n       </View>\n    )\n}\n\nexport default Restaurants;\n"]},"metadata":{},"sourceType":"module"}