{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nvar UPDATE_COMMENT = 'UPDATE_COMMENT';\nexport default function commentReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_COMMENT:\n      return {\n        state: state,\n        comment: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\nexport var saveComment = function saveComment(_ref) {\n  var comment = _ref.comment,\n      restaurant = _ref.restaurant;\n  return function _callee(dispatch) {\n    var config, body, response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            config = {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            };\n            body = JSON.stringify({\n              comment: comment\n            });\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.put(\"http://localhost:8000/api/restaurant/comment/\" + restaurant._id, body, config));\n\n          case 5:\n            response = _context.sent;\n            dispatch({\n              type: UPDATE_COMMENT,\n              payload: response\n            });\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(\"Kunne ikke lagre kommentar\");\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 9]], Promise);\n  };\n};","map":{"version":3,"sources":["C:/Users/Benedicte/VisualStudioCodeProjects/Prosjekt 4/prosjekt-4/project-4/store/ducks/commentDuck.ts"],"names":["axios","UPDATE_COMMENT","commentReducer","state","action","type","comment","payload","saveComment","restaurant","dispatch","config","headers","body","JSON","stringify","put","_id","response","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAkBA,IAAMC,cAAc,GAAG,gBAAvB;AAGA,eAAe,SAASC,cAAT,GAAmE;AAAA,MAA3CC,KAA2C,uEAA3B,EAA2B;AAAA,MAAvBC,MAAuB;;AAChF,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,cAAL;AACI,aAAO;AACHE,QAAAA,KAAK,EAALA,KADG;AAEHG,QAAAA,OAAO,EAAEF,MAAM,CAACG;AAFb,OAAP;;AAIJ;AACE,aAAOJ,KAAP;AAPJ;AASD;AAED,OAAO,IAAMK,WAAW,GAAG,SAAdA,WAAc;AAAA,MAAEF,OAAF,QAAEA,OAAF;AAAA,MAAWG,UAAX,QAAWA,UAAX;AAAA,SAAwC,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACzDC,YAAAA,MADyD,GAChD;AACXC,cAAAA,OAAO,EAAE;AACL,gCAAiB;AADZ;AADE,aADgD;AAMzDC,YAAAA,IANyD,GAMlDC,IAAI,CAACC,SAAL,CAAe;AAACT,cAAAA,OAAO,EAAPA;AAAD,aAAf,CANkD;AAAA;AAAA;AAAA,6CASpCN,KAAK,CAACgB,GAAN,mDAA0DP,UAAU,CAACQ,GAArE,EAA4EJ,IAA5E,EAAkFF,MAAlF,CAToC;;AAAA;AASrDO,YAAAA,QATqD;AAW3DR,YAAAA,QAAQ,CAAC;AACLL,cAAAA,IAAI,EAAEJ,cADD;AAELM,cAAAA,OAAO,EAAEW;AAFJ,aAAD,CAAR;AAX2D;AAAA;;AAAA;AAAA;AAAA;AAgB3DC,YAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;;AAhB2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxC;AAAA,CAApB","sourcesContent":["import axios from 'axios';\r\nimport { IRestaurant } from '../../../backend/models/Restaurant';\r\n\r\n// Types\r\n\r\nexport type commentAction = {\r\n    type: string;\r\n    payload: string;\r\n  };\r\n\r\nexport type commentType = {\r\n    comment: string\r\n    restaurant: IRestaurant\r\n}\r\n  \r\n\r\n// Actions\r\n\r\nconst UPDATE_COMMENT = 'UPDATE_COMMENT';\r\n\r\n// Reducer\r\nexport default function commentReducer(state: string = '', action: commentAction) {\r\n  switch (action.type) {\r\n    case UPDATE_COMMENT:\r\n        return {\r\n            state,\r\n            comment: action.payload\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const saveComment = ({comment, restaurant}: commentType) => async (dispatch: Function) => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type' : 'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({comment})\r\n\r\n    try {\r\n        const response = await axios.put(`http://localhost:8000/api/restaurant/comment/${restaurant._id}`, body, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_COMMENT,\r\n            payload: response\r\n        })\r\n    } catch(error) {\r\n        console.log(\"Kunne ikke lagre kommentar\")\r\n\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}