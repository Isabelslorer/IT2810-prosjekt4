{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar CUISINE_FILTER_UPDATED = 'CUISINE_FILTER_UPDATED';\nexport default function filterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CUISINE_FILTER_UPDATED:\n      if (state.includes(action.payload)) {\n        var _newState = state.filter(function (f) {\n          return f != action.payload;\n        });\n\n        return _newState;\n      }\n\n      var newState = [].concat(_toConsumableArray(state), [action.payload]);\n      return newState;\n\n    default:\n      return state;\n  }\n}\nexport function updateCuisineFilter() {\n  var newFilter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return {\n    type: CUISINE_FILTER_UPDATED,\n    payload: newFilter\n  };\n}","map":{"version":3,"sources":["/Users/isabelslorer/Documents/Webutvikling/project-4/project-4/store/ducks/cuisineFilterDuck.ts"],"names":["CUISINE_FILTER_UPDATED","filterReducer","state","action","type","includes","payload","newState","filter","f","updateCuisineFilter","newFilter"],"mappings":";AAWA,IAAMA,sBAAsB,GAAG,wBAA/B;AAIA,eAAe,SAASC,aAAT,GAAgE;AAAA,MAAzCC,KAAyC,uEAAzB,EAAyB;AAAA,MAArBC,MAAqB;;AAC3E,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKJ,sBAAL;AACI,UAAGE,KAAK,CAACG,QAAN,CAAeF,MAAM,CAACG,OAAtB,CAAH,EAAkC;AAC9B,YAAMC,SAAQ,GAAGL,KAAK,CAACM,MAAN,CAAa,UAAAC,CAAC;AAAA,iBAAIA,CAAC,IAAIN,MAAM,CAACG,OAAhB;AAAA,SAAd,CAAjB;;AACA,eAAOC,SAAP;AACH;;AACD,UAAMA,QAAQ,gCAAOL,KAAP,IAAcC,MAAM,CAACG,OAArB,EAAd;AACA,aAAOC,QAAP;;AACJ;AACA,aAAOL,KAAP;AATJ;AAWH;AAMD,OAAO,SAASQ,mBAAT,GAAqD;AAAA,MAAxBC,SAAwB,uEAAJ,EAAI;AACxD,SAAO;AACLP,IAAAA,IAAI,EAAEJ,sBADD;AAELM,IAAAA,OAAO,EAAEK;AAFJ,GAAP;AAID","sourcesContent":["\n// Types\n\nexport type filterAction = {\n    type: string;\n    payload: string;\n  };\n  \n\n// Actions\n\nconst CUISINE_FILTER_UPDATED = 'CUISINE_FILTER_UPDATED';\n\n//Reducer\n\nexport default function filterReducer(state: string[]=[], action: filterAction){\n    switch(action.type) {\n        case CUISINE_FILTER_UPDATED:\n            if(state.includes(action.payload)){\n                const newState = state.filter(f => f != action.payload);\n                return newState;\n            }\n            const newState = [...state, action.payload];\n            return newState;\n        default: \n        return state;\n    }\n}\n\n\n// Action creators \n\n\nexport function updateCuisineFilter(newFilter: string = '') {\n    return {\n      type: CUISINE_FILTER_UPDATED,\n      payload: newFilter\n    };\n  }\n\n\n  "]},"metadata":{},"sourceType":"module"}