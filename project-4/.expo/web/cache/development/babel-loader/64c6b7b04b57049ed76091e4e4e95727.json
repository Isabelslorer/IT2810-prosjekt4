{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar CUISINE_FILTER_UPDATED = 'CUISINE_FILTER_UPDATED';\nexport default function filterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CUISINE_FILTER_UPDATED:\n      if (state.includes(action.payload)) {\n        var _newState = state.filter(function (f) {\n          return f != action.payload;\n        });\n\n        return _newState;\n      }\n\n      var newState = [].concat(_toConsumableArray(state), [action.payload]);\n      return newState;\n\n    default:\n      return state;\n  }\n}\nexport function updateCuisineFilter() {\n  var newFilter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return {\n    type: CUISINE_FILTER_UPDATED,\n    payload: newFilter\n  };\n}","map":{"version":3,"sources":["C:/Users/Benedicte/VisualStudioCodeProjects/Prosjekt 4/prosjekt-4/project-4/store/ducks/cuisineFilterDuck.ts"],"names":["CUISINE_FILTER_UPDATED","filterReducer","state","action","type","includes","payload","newState","filter","f","updateCuisineFilter","newFilter"],"mappings":";AAWA,IAAMA,sBAAsB,GAAG,wBAA/B;AAIA,eAAe,SAASC,aAAT,GAAgE;AAAA,MAAzCC,KAAyC,uEAAzB,EAAyB;AAAA,MAArBC,MAAqB;;AAC3E,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKJ,sBAAL;AACI,UAAGE,KAAK,CAACG,QAAN,CAAeF,MAAM,CAACG,OAAtB,CAAH,EAAkC;AAC9B,YAAMC,SAAQ,GAAGL,KAAK,CAACM,MAAN,CAAa,UAAAC,CAAC;AAAA,iBAAIA,CAAC,IAAIN,MAAM,CAACG,OAAhB;AAAA,SAAd,CAAjB;;AACA,eAAOC,SAAP;AACH;;AACD,UAAMA,QAAQ,gCAAOL,KAAP,IAAcC,MAAM,CAACG,OAArB,EAAd;AACA,aAAOC,QAAP;;AACJ;AACA,aAAOL,KAAP;AATJ;AAWH;AAMD,OAAO,SAASQ,mBAAT,GAAqD;AAAA,MAAxBC,SAAwB,uEAAJ,EAAI;AACxD,SAAO;AACLP,IAAAA,IAAI,EAAEJ,sBADD;AAELM,IAAAA,OAAO,EAAEK;AAFJ,GAAP;AAID","sourcesContent":["\r\n// Types\r\n\r\nexport type filterAction = {\r\n    type: string;\r\n    payload: string;\r\n  };\r\n  \r\n\r\n// Actions\r\n\r\nconst CUISINE_FILTER_UPDATED = 'CUISINE_FILTER_UPDATED';\r\n\r\n//Reducer\r\n\r\nexport default function filterReducer(state: string[]=[], action: filterAction){\r\n    switch(action.type) {\r\n        case CUISINE_FILTER_UPDATED:\r\n            if(state.includes(action.payload)){\r\n                const newState = state.filter(f => f != action.payload);\r\n                return newState;\r\n            }\r\n            const newState = [...state, action.payload];\r\n            return newState;\r\n        default: \r\n        return state;\r\n    }\r\n}\r\n\r\n\r\n// Action creators \r\n\r\n\r\nexport function updateCuisineFilter(newFilter: string = '') {\r\n    return {\r\n      type: CUISINE_FILTER_UPDATED,\r\n      payload: newFilter\r\n    };\r\n  }\r\n\r\n\r\n  "]},"metadata":{},"sourceType":"module"}