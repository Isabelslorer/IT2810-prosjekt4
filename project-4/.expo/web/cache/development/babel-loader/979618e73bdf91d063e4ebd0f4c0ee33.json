{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Benedicte\\\\VisualStudioCodeProjects\\\\Prosjekt 4\\\\prosjekt-4\\\\project-4\\\\components\\\\Restaurantobject.tsx\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchRestaurants } from \"../store/ducks/restaurantDuck\";\nexport default function Restaurantobject() {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var regionFilter = useSelector(function (state) {\n    return state.regionFilter;\n  });\n  var cuisineFilter = useSelector(function (state) {\n    return state.cuisineFilter;\n  });\n  var priceFilter = useSelector(function (state) {\n    return state.priceFilter;\n  });\n  var search = useSelector(function (state) {\n    return state.search;\n  });\n  var sortBy = useSelector(function (state) {\n    return state.sorting;\n  });\n  var skip = useSelector(function (state) {\n    return state.skip;\n  });\n  useEffect(function () {\n    dispatch(fetchRestaurants(skip, regionFilter, cuisineFilter, priceFilter, search, sortBy.sortBy, sortBy.ascending));\n  }, [fetchRestaurants, regionFilter, cuisineFilter, priceFilter, search, sortBy, skip]);\n  var restaurants = useSelector(function (state) {\n    return state.restaurant;\n  });\n  console.log(restaurants);\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, restaurants.map(function (restaurant) {\n    return React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, restaurant.name);\n  }));\n}","map":{"version":3,"sources":["C:/Users/Benedicte/VisualStudioCodeProjects/Prosjekt 4/prosjekt-4/project-4/components/Restaurantobject.tsx"],"names":["React","useEffect","useDispatch","useSelector","fetchRestaurants","Restaurantobject","dispatch","regionFilter","state","cuisineFilter","priceFilter","search","sortBy","sorting","skip","ascending","restaurants","restaurant","console","log","map","name"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAGA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAIA,SAASC,gBAAT;AAGA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AAEvC,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAIA,MAAMK,YAAY,GAAGJ,WAAW,CAAC,UAACK,KAAD;AAAA,WAAuBA,KAAK,CAACD,YAA7B;AAAA,GAAD,CAAhC;AACA,MAAME,aAAa,GAAGN,WAAW,CAAC,UAACK,KAAD;AAAA,WAAuBA,KAAK,CAACC,aAA7B;AAAA,GAAD,CAAjC;AACA,MAAMC,WAAW,GAAGP,WAAW,CAAC,UAACK,KAAD;AAAA,WAAuBA,KAAK,CAACE,WAA7B;AAAA,GAAD,CAA/B;AACA,MAAMC,MAAM,GAAGR,WAAW,CAAC,UAACK,KAAD;AAAA,WAAuBA,KAAK,CAACG,MAA7B;AAAA,GAAD,CAA1B;AACA,MAAMC,MAAM,GAAGT,WAAW,CAAC,UAACK,KAAD;AAAA,WAAuBA,KAAK,CAACK,OAA7B;AAAA,GAAD,CAA1B;AACA,MAAMC,IAAI,GAAGX,WAAW,CAAC,UAACK,KAAD;AAAA,WAAsBA,KAAK,CAACM,IAA5B;AAAA,GAAD,CAAxB;AAEAb,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,QAAQ,CACJF,gBAAgB,CAACU,IAAD,EAAOP,YAAP,EAAqBE,aAArB,EAAoCC,WAApC,EAAiDC,MAAjD,EAAyDC,MAAM,CAACA,MAAhE,EAAwEA,MAAM,CAACG,SAA/E,CADZ,CAAR;AAGD,GAJQ,EAIN,CAACX,gBAAD,EAAmBG,YAAnB,EAAiCE,aAAjC,EAAgDC,WAAhD,EAA6DC,MAA7D,EAAqEC,MAArE,EAA6EE,IAA7E,CAJM,CAAT;AAMA,MAAME,WAAW,GAAGb,WAAW,CAAC,UAACK,KAAD;AAAA,WAAsBA,KAAK,CAACS,UAA5B;AAAA,GAAD,CAA/B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AAEA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,WAAW,CAACI,GAAZ,CAAgB,UAACH,UAAD;AAAA,WACjB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,UAAU,CAACI,IAAlB,CADiB;AAAA,GAAhB,CADL,CADJ;AAQH","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useEffect } from 'react';\r\nimport { View, Text, Image } from 'react-native';\r\nimport { Card, ListItem, Button, Icon } from 'react-native-elements';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport { IRestaurant } from '../../backend/models/Restaurant';\r\nimport { stateType } from '../App';\r\nimport { fetchRestaurants } from '../store/ducks/restaurantDuck';\r\nimport rootReducer from '../store/rootReducer';\r\n\r\nexport default function Restaurantobject() {\r\n\r\n    const dispatch = useDispatch();\r\n  \r\n    \r\n    // Gets all the states from redux that is needed to fetch the correct restaurants\r\n    const regionFilter = useSelector((state: stateType)  => state.regionFilter)\r\n    const cuisineFilter = useSelector((state: stateType)  => state.cuisineFilter)\r\n    const priceFilter = useSelector((state: stateType)  => state.priceFilter)\r\n    const search = useSelector((state: stateType)  => state.search)\r\n    const sortBy = useSelector((state: stateType)  => state.sorting)\r\n    const skip = useSelector((state: stateType) => state.skip)\r\n  \r\n    useEffect(() => {\r\n      dispatch(\r\n          fetchRestaurants(skip, regionFilter, cuisineFilter, priceFilter, search, sortBy.sortBy, sortBy.ascending)\r\n      );\r\n    }, [fetchRestaurants, regionFilter, cuisineFilter, priceFilter, search, sortBy, skip])\r\n  \r\n    const restaurants = useSelector((state: stateType) => state.restaurant)\r\n\r\n    console.log(restaurants)\r\n\r\n    return(\r\n        <View>\r\n            {restaurants.map((restaurant: IRestaurant) => \r\n            <Text>{restaurant.name}</Text>\r\n            )}\r\n        </View>\r\n    )\r\n\r\n}\r\n\r\n// const users = [\r\n//     {\r\n//        name: 'brynn',\r\n//        avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/brynn/128.jpg'\r\n//     }, // more users here\r\n//    ];\r\n\r\n// export default function Restaurantobject() {\r\n//   return (\r\n//     <Card>\r\n//         <Card.Title>CARD WITH DIVIDER</Card.Title>\r\n//         <Card.Divider/>\r\n//         {\r\n//             users.map((u, i) => {\r\n//             return (\r\n//                 <View key={i} style={styles.user}>\r\n//                 <Image\r\n//                     style={styles.image}\r\n//                     resizeMode=\"cover\"\r\n//                     source={{ uri: u.avatar }}\r\n//                 />\r\n//                 <Text style={styles.name}>{u.name}</Text>\r\n//                 </View>\r\n//             );\r\n//             })\r\n//         }\r\n//     </Card>\r\n//   );\r\n// }\r\n\r\n\r\n// const styles = StyleSheet.create({\r\n//   header: {\r\n//     height: 100,\r\n//     padding: 15,\r\n//     backgroundColor: '#4dd0e1',\r\n//   },\r\n//   text: {\r\n//     paddingTop: 40,\r\n//     color: 'white', \r\n//     fontSize: 28\r\n//   }\r\n// });"]},"metadata":{},"sourceType":"module"}